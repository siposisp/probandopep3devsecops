pipeline {
    agent any
    tools {
        maven "maven"
    }
    stages {
        stage("Checkout") {
            steps {
                checkout scmGit(
                    branches: [[name: '*/main']],
                    userRemoteConfigs: [[url: 'https://github.com/siposisp/a']]
                )
            }
        }

        stage("Build Backend") {
            steps {
                dir("LAB-TBD") {
                    bat "mvn clean install"
                }
            }
        }

        stage("Test Backend") {
            steps {
                dir("LAB-TBD") {
                    bat "mvn test"
                }
            }
        }
        stage("SpotBugs Analysis") {
            steps {
                dir("LAB-TBD") {
                    bat "mvn spotbugs:spotbugs"
                    bat "dir target"
                }
            }
        }
        stage("SonarQube Analysis"){
            steps{
                dir("LAB-TBD"){
                    bat "mvn clean verify sonar:sonar  -Dsonar.projectKey=pep3  -Dsonar.projectName=\"pep3\"  -Dsonar.host.url=http://localhost:9000  -Dsonar.token=sqa_98387ca1b4bd116e325d4f605a0fcd2dec439525"
                }
            }
        } 
        stage("Build Docker Image Backend") {
            steps {
                dir("LAB-TBD") {
                    bat "docker build -t niko085/pep2devsecops_backend2 ."
                }
            }
        }
        stage("Push Docker Image Backend") {
            steps {
                dir("LAB-TBD") {
                    bat "docker login -u niko085 -p Nicolas2519"
                    bat "docker push niko085/pep2devsecops_backend2"
                }
            }
        }

        stage("Build Frontend") {
            steps {
                dir("Frontend") {
                    bat "npm install"
                    bat "npm run build"
                }
            }
        }

        stage("Build Docker Image Frontend") {
            steps {
                dir("Frontend") {
                    bat "docker build -t niko085/pep2devsecops_frontend2 ."
                }
            }
        }

        stage("Push Docker Image Frontend") {
            steps {
                dir("Frontend") {
                    bat "docker login -u niko085 -p Nicolas2519"
                    bat "docker push niko085/pep2devsecops_frontend2"
                }
            }
        }
        
        
        stage("Create Docker Network") {
            steps {
                bat "docker network create pep3-network || echo Network already exists"
            }
        }

        stage("Deploy Backend with Docker Compose") {
            steps {
                dir("LAB-TBD") {
                    bat "docker-compose down || exit 0"
                    bat "docker-compose up -d --build"
                }
            }
        }
        stage("Deploy Frontend with Docker Compose") {
            steps {
                dir("Frontend") {
                    bat "docker-compose down || exit 0"
                    bat "docker-compose up -d --build"
                }
            }
        }
        stage("Publicar HTML SpotBugs") {
            steps {
                publishHTML([
                    reportName: 'SpotBugs HTML Report',
                    reportDir: 'LAB-TBD/target/spotbugs-html',
                    reportFiles: 'index.html',
                    keepAll: true,
                    alwaysLinkToLastBuild: true,
                    allowMissing: true
                ])
            }
        }
    }

    post {
        always {
            bat "docker logout"
            recordIssues tools: [spotBugs(pattern: '**/spotbugsXml.xml')]
        }
    }
}
